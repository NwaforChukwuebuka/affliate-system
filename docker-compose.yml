version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: affiliate_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-affiliate_system}
      POSTGRES_USER: ${POSTGRES_USER:-affiliate_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-affiliate_pass}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - affiliate_network
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: affiliate_n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-affiliate_system}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-affiliate_user}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-affiliate_pass}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-admin123}
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=UTC
      # Pass environment variables for use in workflows
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - PHANTOMBUSTER_API_KEY=${PHANTOMBUSTER_API_KEY}
      - LEAD_BATCH_SIZE=${LEAD_BATCH_SIZE:-10}
      - ENRICHMENT_DELAY_MS=${ENRICHMENT_DELAY_MS:-2000}
      - MAX_RETRIES=${MAX_RETRIES:-3}
    ports:
      - "${N8N_PORT:-5678}:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
    networks:
      - affiliate_network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  n8n_data:

networks:
  affiliate_network:
    driver: bridge 